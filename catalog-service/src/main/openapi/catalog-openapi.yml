openapi: 3.1.0
info:
  title: catalog-openapi
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /api/category/create:
    post:
      tags:
        - category-controller
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
      x-stoplight:
        id: 0is28ifnujc85
    parameters: []
  /api/product:
    post:
      tags:
        - product-controller
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
  '/api/product/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    put:
      tags:
        - product-controller
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
    delete:
      tags:
        - product-controller
      responses:
        '200':
          description: OK
      operationId: deleteProduct
    get:
      summary: Your GET endpoint
      tags:
        - product-controller
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
      operationId: findById
      x-stoplight:
        id: fdunx2lvrskmx
  /api/product/search:
    get:
      tags:
        - product-controller
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'
                  x-stoplight:
                    id: l8bj1zvk4o64b
      operationId: searchProducts
      x-stoplight:
        id: 6xxo6yzh8jp49
      parameters:
        - schema:
            type: string
          in: query
          name: productName
        - schema:
            type: string
          in: query
          name: categoryName
        - schema:
            type: integer
            format: int64
          in: query
          name: minPrice
        - schema:
            type: integer
            format: int64
          in: query
          name: maxPrice
        - schema:
            type: integer
            format: int32
          in: query
          name: page
        - schema:
            type: integer
            format: int32
          in: query
          name: size
        - schema:
            type: string
          in: query
          name: sort
    parameters: []
  '/api/product/priceHistory/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - product-controller
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryDataProductDto'
                  x-stoplight:
                    id: xxkzppk0j0mc9
      operationId: getProductPriceHistoryById
      x-stoplight:
        id: 36k20r148vigo
components:
  schemas:
    CategoryDto:
      title: CategoryDto
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProductDto:
      title: ProductDto
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        priceInHuf:
          type: integer
          format: int64
        category:
          allOf:
            - $ref: '#/components/schemas/CategoryDto'
    HistoryDataProductDto:
      type: object
      x-stoplight:
        id: zybbmlxclbg12
      properties:
        data:
          $ref: '#/components/schemas/ProductDto'
        revisionType:
          type: string
          enum:
            - ADD
            - MOD
            - DEL
        revision:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
      title: HistoryDataProductDto